{"version":3,"file":"static/js/400.940fd836.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.module.css?1a60","pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.jsx","servises/MovieApiServise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetails\":\"MovieDetailsPage_MovieDetails__27Lww\",\"Button\":\"MovieDetailsPage_Button__cawtI\",\"Information\":\"MovieDetailsPage_Information__QZJlI\",\"Information_title\":\"MovieDetailsPage_Information_title__0Q3H2\",\"Link\":\"MovieDetailsPage_Link__P4wUE\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  Link,\n  Route,\n  useRouteMatch,\n  useParams,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport * as MovieApiServise from '../../../servises/MovieApiServise';\nimport Loader from 'react-loader-spinner';\nimport notFound from '../../../images/NotFound.png';\nimport style from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() => import('../../../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../../../components/Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const { url } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    MovieApiServise.fetchDetailsMovie(movieId).then(response =>\n      setMovie(response),\n    );\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? '');\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button className={style.Button} type=\"button\" onClick={onGoBack}>\n            Go Back\n          </button>\n\n          <div className={style.MovieDetailsPage}>\n            <div className={style.MovieDetails}>\n              <div className={style.MovieDetails_img}>\n                <img\n                  src={\n                    movie.poster_path ? (\n                      `https://www.themoviedb.org/t/p/w300${movie.poster_path}`\n                    ) : (\n                      <img src={notFound} alt=\"Not Found\" />\n                    )\n                  }\n                  alt={movie.title}\n                />\n              </div>\n              <div className={style.Information}>\n                <h2 className={style.Information_title}>{`${\n                  movie.title\n                } (${movie.release_date.slice(0, 4)})`}</h2>\n                <span>{`User score: ${Math.trunc(\n                  movie.vote_average * 10,\n                )}%`}</span>\n                <h2 className={style.Information_title}>Overview:</h2>\n                <p>{movie.overview}</p>\n                <h2 className={style.Information_title}>Genres:</h2>\n                <span>{movie.genres.map(({ name }) => name).join(', ')}</span>\n              </div>\n            </div>\n\n            <div>\n              <h3>Additional information</h3>\n              <ul>\n                <li className={style.Link}>\n                  <Link\n                    to={{\n                      pathname: `${url}/cast`,\n                      state: { from: location?.state?.from },\n                    }}\n                  >\n                    Cast\n                  </Link>\n                </li>\n                <li className={style.Link}>\n                  <Link\n                    to={{\n                      // Route path:\n                      pathname: `${url}/reviews`,\n                      state: { from: location?.state?.from },\n                    }}\n                  >\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </div>\n\n            <Suspense\n              fallback={\n                <Loader\n                  type=\"Circles\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                />\n              }\n            >\n              <Route path={`${url}/cast`}>\n                <Cast movieId={movieId} />\n              </Route>\n\n              <Route path={`${url}/reviews`}>\n                <Reviews movieId={movieId} />\n              </Route>\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","const API_KEY = 'dc269ff1c12aab7d3d0e3977a0d41318';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies(currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${currentPage}`,\n  );\n}\n\nexport function fetchSearchMovies(query, currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${currentPage}&include_adult=false`,\n  );\n}\n\nexport function fetchDetailsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchCastMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchReviewsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n"],"names":["Cast","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","movieId","useParams","url","useRouteMatch","history","useHistory","location","useLocation","useEffect","MovieApiServise","then","response","className","style","type","onClick","push","state","from","src","poster_path","notFound","alt","title","release_date","slice","Math","trunc","vote_average","overview","genres","map","name","join","to","pathname","Suspense","fallback","color","height","width","path","API_KEY","BASE_URL","fetchWithErrorHandling","config","fetch","ok","json","Promise","reject","Error","fetchPopularMovies","currentPage","fetchSearchMovies","query","fetchDetailsMovie","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}