{"version":3,"file":"static/js/603.dae3c16a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","servises/MovieApiServise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MovieList_List__lc4SB\",\"Item\":\"MovieList_Item__KpQYl\",\"Title\":\"MovieList_Title__kVw-B\",\"Link\":\"MovieList_Link__LbxbC\"};","import { Link } from 'react-router-dom';\nimport notFoundPoster from '../../images/NotFoundPoster.jpg';\nimport style from './MovieList.module.css';\n\nexport default function MovieList({ movies, url, location }) {\n  return (\n    <ul className={style.List}>\n      {movies.map(movie => (\n        <li key={movie.id} className={style.Item}>\n          <Link\n            className={style.Link}\n            to={{ pathname: `${url}/${movie.id}`, state: { from: location } }}\n          >\n            <img\n              src={\n                movie.poster_path\n                  ? `https://www.themoviedb.org/t/p/w185${movie.poster_path}`\n                  : notFoundPoster\n              }\n              alt={movie.title}\n            />\n            <p className={style.Title}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__asjbW\",\"SearchForm\":\"Searchbar_SearchForm__mImp2\",\"SearchForm_button\":\"Searchbar_SearchForm_button__SirD0\",\"SearchImg\":\"Searchbar_SearchImg__0qXcI\",\"SearchForm_input\":\"Searchbar_SearchForm_input__fEisS\"};","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport style from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const queryValue = new URLSearchParams(location.search).get('query');\n\n    if (queryValue === null) {\n      return;\n    }\n\n    setSearchQuery(queryValue);\n  }, [location.search]);\n\n  const handleNameChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(searchQuery.trim().toLowerCase());\n    setSearchQuery('');\n  };\n\n  return (\n    <div className={style.Searchbar}>\n      <form className={style.SearchForm} onSubmit={handleSubmit}>\n        <button className={style.SearchForm_button} type=\"submit\">\n          <span>\n            <ImSearch />\n            <span className={style.SearchImg}>Search</span>\n          </span>\n        </button>\n\n        <input\n          className={style.SearchForm_input}\n          type=\"text\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleNameChange}\n        />\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  searchQuery: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useRouteMatch, useHistory, useLocation } from 'react-router-dom';\nimport Searchbar from '../../components/Searchbar';\nimport MovieList from '../../components/MovieList';\nimport * as MovieApiServise from '../../servises/MovieApiServise';\nimport notFound from '../../images/NotFound.png';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    const searchQuery = new URLSearchParams(location.search).get('query');\n\n    if (searchQuery === null) {\n      return;\n    }\n\n    setQuery(searchQuery);\n  }, [location.search]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    MovieApiServise.fetchSearchMovies(query).then(response =>\n      setMovies(response.results),\n    );\n  }, [query]);\n\n  const handleSubmit = value => {\n    setQuery(value);\n    history.push({ ...location, search: `query=${value}` });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} />\n\n      {movies &&\n        (movies.length ? (\n          <MovieList location={location} movies={movies} url={url} />\n        ) : (\n          <img src={notFound} alt=\"Not Found\" />\n        ))}\n    </>\n  );\n}\n","const API_KEY = 'dc269ff1c12aab7d3d0e3977a0d41318';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies(currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${currentPage}`,\n  );\n}\n\nexport function fetchSearchMovies(query, currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${currentPage}&include_adult=false`,\n  );\n}\n\nexport function fetchDetailsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchCastMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchReviewsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n"],"names":["MovieList","movies","url","location","className","style","map","movie","to","pathname","id","state","from","src","poster_path","notFoundPoster","alt","title","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","useLocation","useEffect","queryValue","URLSearchParams","search","get","event","preventDefault","trim","toLowerCase","type","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","MoviesPage","setMovies","query","setQuery","history","useHistory","useRouteMatch","MovieApiServise","then","response","results","push","length","notFound","API_KEY","BASE_URL","fetchWithErrorHandling","config","fetch","ok","json","Promise","reject","Error","fetchPopularMovies","currentPage","fetchSearchMovies","fetchDetailsMovie","movieId","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}