{"version":3,"file":"static/js/469.bf30dcdd.chunk.js","mappings":"+LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAsF,yBAAtF,EAAsH,wB,SCGvG,SAASA,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,SAC/C,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CACED,UAAWC,EACXG,GAAI,CAAEC,SAAS,GAAD,OAAKP,EAAL,YAAYK,EAAMG,IAAMC,MAAO,CAAEC,KAAMT,IAFvD,WAIE,gBACEU,IACEN,EAAMO,YAAN,6CAC0CP,EAAMO,aAC5CC,EAENC,IAAKT,EAAMU,SAEb,cAAGb,UAAWC,EAAd,SAA4BE,EAAMU,YAb7BV,EAAMG,W,8GCPvB,EAA2B,2BAA3B,EAA8D,wB,SCI/C,SAASQ,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAqCC,MAAK,SAAAC,GAAQ,OAChDJ,EAAUI,EAASC,cAEpB,KAGD,+BACE,iBAAKrB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,kCAECJ,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,EAAQC,IAAK,mB,uLCnB7CwB,EAAU,mCACVC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsC1B,EAAtC,+BAA4C,GAAI2B,EAAhD,+BAAyD,GAAzD,SACyBC,MAAM5B,EAAK2B,GADpC,YACQL,EADR,QAEkBO,GAFlB,iCAGYP,EAASQ,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IAAqC,IAAlBC,EAAiB,uDAAH,EAC/C,OAAOT,EAAuB,GAAD,OACxBD,EADwB,sCACcD,EADd,iBAC8BW,IAItD,SAASC,EAAkBC,GAAyB,IAAlBF,EAAiB,uDAAH,EACrD,OAAOT,EAAuB,GAAD,OACxBD,EADwB,gCACQD,EADR,kBACyBa,EADzB,gCACsDF,EADtD,yBAKxB,SAASG,EAAkBC,GAChC,OAAOb,EAAuB,GAAD,OACxBD,EADwB,iBACPc,EADO,qBACaf,EADb,oBAKxB,SAASgB,EAAeD,GAC7B,OAAOb,EAAuB,GAAD,OACxBD,EADwB,iBACPc,EADO,4BACoBf,EADpB,oBAKxB,SAASiB,EAAkBF,GAChC,OAAOb,EAAuB,GAAD,OACxBD,EADwB,iBACPc,EADO,4BACoBf,EADpB,6B","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","servises/MovieApiServise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MovieList_List__lc4SB\",\"Item\":\"MovieList_Item__KpQYl\",\"Title\":\"MovieList_Title__kVw-B\",\"Link\":\"MovieList_Link__LbxbC\"};","import { Link } from 'react-router-dom';\nimport notFoundPoster from '../../images/NotFoundPoster.jpg';\nimport style from './MovieList.module.css';\n\nexport default function MovieList({ movies, url, location }) {\n  return (\n    <ul className={style.List}>\n      {movies.map(movie => (\n        <li key={movie.id} className={style.Item}>\n          <Link\n            className={style.Link}\n            to={{ pathname: `${url}/${movie.id}`, state: { from: location } }}\n          >\n            <img\n              src={\n                movie.poster_path\n                  ? `https://www.themoviedb.org/t/p/w185${movie.poster_path}`\n                  : notFoundPoster\n              }\n              alt={movie.title}\n            />\n            <p className={style.Title}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"HomePage\":\"HomePage_HomePage__EM4Jp\",\"Title\":\"HomePage_Title__YHDzt\"};","import { useState, useEffect } from 'react';\nimport * as MovieApiServise from '../../servises/MovieApiServise';\nimport MovieList from '../../components/MovieList/MovieList';\nimport style from './HomePage.module.css';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    MovieApiServise.fetchPopularMovies().then(response =>\n      setMovies(response.results),\n    );\n  }, []);\n\n  return (\n    <>\n      <div className={style.HomePage}>\n        <h2 className={style.Title}>Popular movies today</h2>\n\n        {movies && <MovieList movies={movies} url={'/movies'} />}\n      </div>\n    </>\n  );\n}\n","const API_KEY = 'dc269ff1c12aab7d3d0e3977a0d41318';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies(currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${currentPage}`,\n  );\n}\n\nexport function fetchSearchMovies(query, currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${currentPage}&include_adult=false`,\n  );\n}\n\nexport function fetchDetailsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchCastMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchReviewsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n"],"names":["MovieList","movies","url","location","className","style","map","movie","to","pathname","id","state","from","src","poster_path","notFoundPoster","alt","title","HomePage","useState","setMovies","useEffect","MovieApiServise","then","response","results","API_KEY","BASE_URL","fetchWithErrorHandling","config","fetch","ok","json","Promise","reject","Error","fetchPopularMovies","currentPage","fetchSearchMovies","query","fetchDetailsMovie","movieId","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}